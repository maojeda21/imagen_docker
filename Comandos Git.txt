init: el primer comando para hacer que cualquier proyecto sea versionado o controlado por git
	git init (en la carpeta del proyecto)

.gitignore: los contenidos en esta carpeta seran ignorados por el push de Git.

status: podemos ver el estado de nuestros archivos.
	git status

add: para agregar los nuevos archivos al versionamiento de Git.
	git add comandos.txt

-A: con este parametro agregamso todos los archivos al versionamiento.
	git add -A 

rm: con este comando ingnoramos algunos cambios hechos antes de hacer el commit.
	git rm --cached .gitignore

commit: agregar un comentario y pasar los archivos del estado de staying al repositorio
	git commit -m "agregando archivos"

log: permite ver el historial de todos los commits del repositorio
	git log

clone: clona un repositorio externo a tu PC para poder empezar a usarlo.
	git clone URL del repo

diff: muestra las diferencias entre los commit.
	git diff

push: subir los cambios al repo.
	git push origin master

pull: descargamos la ultima version que esta en el repositorio.
	git pull origin master

branch: crear una "rama" diferente a la principal (master) para poder empezar a trabajar en el proyecto, luego unirlo a la master.
	git branch (nombre de la rama)
	git branch (tambien se usa para ver las branch o ramas disponibles en el directorio local)

checkout: se utilizar para cambiarse a la rama recientemente creado, o para moverse entra las diferentes ramas o a la master.
	git branch primeraRama

-u: lo que haces es decirle al repo de github que vamos a tener una rama local linkeada a una rama en el repo.
	git push -u origin primeraRama



